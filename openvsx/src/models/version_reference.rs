/*
 * Open VSX Registry API
 *
 * This API provides metadata of VS Code extensions in the Open VSX Registry as well as means to publish extensions.
 *
 * The version of the OpenAPI document: 0.1
 *
 * Generated by: https://openapi-generator.tech
 */

/// VersionReference : Essential metadata of an extension version

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct VersionReference {
    /// URL to get the full metadata of this version
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// Map of file types (download, manifest, icon, readme, license, changelog) to their respective URLs
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// Name of the target platform
    #[serde(rename = "targetPlatform", skip_serializing_if = "Option::is_none")]
    pub target_platform: Option<String>,
    /// Map of engine names to the respective version constraints
    #[serde(rename = "engines", skip_serializing_if = "Option::is_none")]
    pub engines: Option<::std::collections::HashMap<String, String>>,
}

impl VersionReference {
    /// Essential metadata of an extension version
    pub fn new() -> VersionReference {
        VersionReference {
            url: None,
            files: None,
            version: None,
            target_platform: None,
            engines: None,
        }
    }
}
